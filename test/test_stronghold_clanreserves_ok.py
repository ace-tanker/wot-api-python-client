# coding: utf-8

"""
    World of Tanks

    OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer's room](https://developers.wargaming.net/).

    The version of the OpenAPI document: 1.0.0
    Contact: contact@ace-tanker.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wot_api_client.models.stronghold_clanreserves_ok import StrongholdClanreservesOk

class TestStrongholdClanreservesOk(unittest.TestCase):
    """StrongholdClanreservesOk unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StrongholdClanreservesOk:
        """Test StrongholdClanreservesOk
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StrongholdClanreservesOk`
        """
        model = StrongholdClanreservesOk()
        if include_optional:
            return StrongholdClanreservesOk(
                status = 'ok',
                meta = wot_api_client.models.stronghold_clanreserves_meta.stronghold_clanreserves_meta(
                    count = 56, ),
                data = [
                    wot_api_client.models.stronghold_clanreserves_data_inner.stronghold_clanreserves_data_inner(
                        name = '', 
                        type = '', 
                        disposable = True, 
                        bonus_type = '', 
                        icon = '', 
                        in_stock = [
                            wot_api_client.models.stronghold_clanreserves_data_inner_in_stock_inner.stronghold_clanreserves_data_inner_in_stock_inner(
                                amount = 56, 
                                bonus_values = [
                                    wot_api_client.models.stronghold_clanreserves_data_inner_in_stock_inner_bonus_values_inner.stronghold_clanreserves_data_inner_in_stock_inner_bonus_values_inner(
                                        battle_type = '', 
                                        value = 1.337, )
                                    ], 
                                x_level_only = True, 
                                status = '', 
                                action_time = 56, 
                                activated_at = 56, 
                                active_till = 56, 
                                level = 56, )
                            ], )
                    ]
            )
        else:
            return StrongholdClanreservesOk(
                status = 'ok',
                meta = wot_api_client.models.stronghold_clanreserves_meta.stronghold_clanreserves_meta(
                    count = 56, ),
                data = [
                    wot_api_client.models.stronghold_clanreserves_data_inner.stronghold_clanreserves_data_inner(
                        name = '', 
                        type = '', 
                        disposable = True, 
                        bonus_type = '', 
                        icon = '', 
                        in_stock = [
                            wot_api_client.models.stronghold_clanreserves_data_inner_in_stock_inner.stronghold_clanreserves_data_inner_in_stock_inner(
                                amount = 56, 
                                bonus_values = [
                                    wot_api_client.models.stronghold_clanreserves_data_inner_in_stock_inner_bonus_values_inner.stronghold_clanreserves_data_inner_in_stock_inner_bonus_values_inner(
                                        battle_type = '', 
                                        value = 1.337, )
                                    ], 
                                x_level_only = True, 
                                status = '', 
                                action_time = 56, 
                                activated_at = 56, 
                                active_till = 56, 
                                level = 56, )
                            ], )
                    ],
        )
        """

    def testStrongholdClanreservesOk(self):
        """Test StrongholdClanreservesOk"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
