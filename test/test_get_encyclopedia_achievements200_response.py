# coding: utf-8

"""
    World of Tanks

    OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer's room](https://developers.wargaming.net/).

    The version of the OpenAPI document: 1.0.0
    Contact: contact@ace-tanker.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wot_api_client.models.get_encyclopedia_achievements200_response import GetEncyclopediaAchievements200Response

class TestGetEncyclopediaAchievements200Response(unittest.TestCase):
    """GetEncyclopediaAchievements200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetEncyclopediaAchievements200Response:
        """Test GetEncyclopediaAchievements200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetEncyclopediaAchievements200Response`
        """
        model = GetEncyclopediaAchievements200Response()
        if include_optional:
            return GetEncyclopediaAchievements200Response(
                status = 'error',
                meta = wot_api_client.models.get_account_list_200_response_one_of_meta.get_account_list_200_response_oneOf_meta(
                    count = 56, ),
                data = {
                    'key' : wot_api_client.models.get_encyclopedia_achievements_200_response_one_of_data_value.get_encyclopedia_achievements_200_response_oneOf_data_value(
                        name = '', 
                        name_i18n = '', 
                        type = '', 
                        section = '', 
                        section_order = 56, 
                        image = '', 
                        image_big = '', 
                        description = '', 
                        condition = '', 
                        hero_info = '', 
                        order = 56, 
                        options = [
                            wot_api_client.models.get_encyclopedia_achievements_200_response_one_of_data_value_options_inner.get_encyclopedia_achievements_200_response_oneOf_data_value_options_inner(
                                name_i18n = '', 
                                image = '', 
                                image_big = '', 
                                nation_images = wot_api_client.models.get_encyclopedia_achievements_200_response_one_of_data_value_options_inner_nation_images.get_encyclopedia_achievements_200_response_oneOf_data_value_options_inner_nation_images(
                                    x71 = {
                                        'key' : ''
                                        }, 
                                    x85 = {
                                        'key' : ''
                                        }, 
                                    x180 = {
                                        'key' : ''
                                        }, ), 
                                description = '', )
                            ], 
                        outdated = True, )
                    },
                error = wot_api_client.models.get_account_list_200_response_one_of_1_error.get_account_list_200_response_oneOf_1_error(
                    code = 1.337, 
                    message = '', 
                    field = '', 
                    value = '', )
            )
        else:
            return GetEncyclopediaAchievements200Response(
                status = 'error',
                meta = wot_api_client.models.get_account_list_200_response_one_of_meta.get_account_list_200_response_oneOf_meta(
                    count = 56, ),
                data = {
                    'key' : wot_api_client.models.get_encyclopedia_achievements_200_response_one_of_data_value.get_encyclopedia_achievements_200_response_oneOf_data_value(
                        name = '', 
                        name_i18n = '', 
                        type = '', 
                        section = '', 
                        section_order = 56, 
                        image = '', 
                        image_big = '', 
                        description = '', 
                        condition = '', 
                        hero_info = '', 
                        order = 56, 
                        options = [
                            wot_api_client.models.get_encyclopedia_achievements_200_response_one_of_data_value_options_inner.get_encyclopedia_achievements_200_response_oneOf_data_value_options_inner(
                                name_i18n = '', 
                                image = '', 
                                image_big = '', 
                                nation_images = wot_api_client.models.get_encyclopedia_achievements_200_response_one_of_data_value_options_inner_nation_images.get_encyclopedia_achievements_200_response_oneOf_data_value_options_inner_nation_images(
                                    x71 = {
                                        'key' : ''
                                        }, 
                                    x85 = {
                                        'key' : ''
                                        }, 
                                    x180 = {
                                        'key' : ''
                                        }, ), 
                                description = '', )
                            ], 
                        outdated = True, )
                    },
                error = wot_api_client.models.get_account_list_200_response_one_of_1_error.get_account_list_200_response_oneOf_1_error(
                    code = 1.337, 
                    message = '', 
                    field = '', 
                    value = '', ),
        )
        """

    def testGetEncyclopediaAchievements200Response(self):
        """Test GetEncyclopediaAchievements200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
