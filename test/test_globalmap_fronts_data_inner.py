# coding: utf-8

"""
    World of Tanks

    OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer's room](https://developers.wargaming.net/).

    The version of the OpenAPI document: 1.0.0
    Contact: contact@ace-tanker.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wot_api_client.models.globalmap_fronts_data_inner import GlobalmapFrontsDataInner

class TestGlobalmapFrontsDataInner(unittest.TestCase):
    """GlobalmapFrontsDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GlobalmapFrontsDataInner:
        """Test GlobalmapFrontsDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GlobalmapFrontsDataInner`
        """
        model = GlobalmapFrontsDataInner()
        if include_optional:
            return GlobalmapFrontsDataInner(
                front_id = '',
                front_name = '',
                is_active = True,
                is_event = True,
                vehicle_freeze = True,
                fog_of_war = True,
                battle_time_limit = 56,
                min_tanks_per_division = 56,
                max_tanks_per_division = 56,
                division_cost = 56,
                avg_clans_rating = 56,
                avg_won_bet = 56,
                avg_min_bet = 56,
                min_vehicle_level = 56,
                max_vehicle_level = 56,
                available_extensions = [
                    wot_api_client.models.globalmap_fronts_data_inner_available_extensions_inner.globalmap_fronts_data_inner_available_extensions_inner(
                        extension_id = '', 
                        cost = 56, 
                        wage = 56, 
                        name = '', 
                        description_tactical = '', 
                        description_strategic = '', )
                    ],
                provinces_count = 56
            )
        else:
            return GlobalmapFrontsDataInner(
                front_id = '',
                front_name = '',
                is_active = True,
                is_event = True,
                vehicle_freeze = True,
                fog_of_war = True,
                battle_time_limit = 56,
                min_tanks_per_division = 56,
                max_tanks_per_division = 56,
                division_cost = 56,
                avg_clans_rating = 56,
                avg_won_bet = 56,
                avg_min_bet = 56,
                min_vehicle_level = 56,
                max_vehicle_level = 56,
                available_extensions = [
                    wot_api_client.models.globalmap_fronts_data_inner_available_extensions_inner.globalmap_fronts_data_inner_available_extensions_inner(
                        extension_id = '', 
                        cost = 56, 
                        wage = 56, 
                        name = '', 
                        description_tactical = '', 
                        description_strategic = '', )
                    ],
                provinces_count = 56,
        )
        """

    def testGlobalmapFrontsDataInner(self):
        """Test GlobalmapFrontsDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
