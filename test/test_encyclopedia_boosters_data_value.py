# coding: utf-8

"""
    World of Tanks

    OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer's room](https://developers.wargaming.net/).

    The version of the OpenAPI document: 1.0.0
    Contact: contact@ace-tanker.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wot_api_client.models.encyclopedia_boosters_data_value import EncyclopediaBoostersDataValue

class TestEncyclopediaBoostersDataValue(unittest.TestCase):
    """EncyclopediaBoostersDataValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EncyclopediaBoostersDataValue:
        """Test EncyclopediaBoostersDataValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EncyclopediaBoostersDataValue`
        """
        model = EncyclopediaBoostersDataValue()
        if include_optional:
            return EncyclopediaBoostersDataValue(
                booster_id = 56,
                name = '',
                description = '',
                images = wot_api_client.models.encyclopedia_boosters_data_value_images.encyclopedia_boosters_data_value_images(
                    large = '', 
                    small = '', ),
                lifetime = 56,
                resource = '',
                is_auto = True,
                expires_at = 56,
                price_credit = 56,
                price_gold = 56
            )
        else:
            return EncyclopediaBoostersDataValue(
                booster_id = 56,
                name = '',
                description = '',
                images = wot_api_client.models.encyclopedia_boosters_data_value_images.encyclopedia_boosters_data_value_images(
                    large = '', 
                    small = '', ),
                lifetime = 56,
                resource = '',
                is_auto = True,
                expires_at = 56,
                price_credit = 56,
                price_gold = 56,
        )
        """

    def testEncyclopediaBoostersDataValue(self):
        """Test EncyclopediaBoostersDataValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
