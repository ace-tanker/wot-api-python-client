# coding: utf-8

"""
    World of Tanks

    OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer's room](https://developers.wargaming.net/).

    The version of the OpenAPI document: 1.0.0
    Contact: contact@ace-tanker.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wot_api_client.models.globalmap_provinces_data_inner import GlobalmapProvincesDataInner

class TestGlobalmapProvincesDataInner(unittest.TestCase):
    """GlobalmapProvincesDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GlobalmapProvincesDataInner:
        """Test GlobalmapProvincesDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GlobalmapProvincesDataInner`
        """
        model = GlobalmapProvincesDataInner()
        if include_optional:
            return GlobalmapProvincesDataInner(
                arena_id = '',
                arena_name = '',
                daily_revenue = 56,
                front_id = '',
                front_name = '',
                revenue_level = 56,
                prime_time = '',
                province_id = '',
                province_name = '',
                landing_type = '',
                world_redivision = True,
                current_min_bet = 56,
                last_won_bet = 56,
                neighbours = [
                    ''
                    ],
                uri = '',
                round_number = 56,
                battles_start_at = '',
                status = '',
                max_bets = 56,
                competitors = [
                    56
                    ],
                attackers = [
                    56
                    ],
                active_battles = [
                    wot_api_client.models.globalmap_provinces_data_inner_active_battles_inner.globalmap_provinces_data_inner_active_battles_inner(
                        start_at = '', 
                        round = 56, 
                        battle_reward = 56, 
                        clan_a = wot_api_client.models.globalmap_provinces_data_inner_active_battles_inner_clan_a.globalmap_provinces_data_inner_active_battles_inner_clan_a(
                            clan_id = 56, 
                            win_elo_delta = 56, 
                            loose_elo_delta = 56, 
                            battle_reward = 56, ), 
                        clan_b = wot_api_client.models.globalmap_provinces_data_inner_active_battles_inner_clan_b.globalmap_provinces_data_inner_active_battles_inner_clan_b(
                            clan_id = 56, 
                            win_elo_delta = 56, 
                            loose_elo_delta = 56, 
                            battle_reward = 56, ), )
                    ],
                owner_clan_id = 56,
                is_borders_disabled = True,
                pillage_end_at = '',
                server = ''
            )
        else:
            return GlobalmapProvincesDataInner(
                arena_id = '',
                arena_name = '',
                daily_revenue = 56,
                front_id = '',
                front_name = '',
                revenue_level = 56,
                prime_time = '',
                province_id = '',
                province_name = '',
                landing_type = '',
                world_redivision = True,
                current_min_bet = 56,
                last_won_bet = 56,
                neighbours = [
                    ''
                    ],
                uri = '',
                round_number = 56,
                battles_start_at = '',
                status = '',
                max_bets = 56,
                competitors = [
                    56
                    ],
                attackers = [
                    56
                    ],
                active_battles = [
                    wot_api_client.models.globalmap_provinces_data_inner_active_battles_inner.globalmap_provinces_data_inner_active_battles_inner(
                        start_at = '', 
                        round = 56, 
                        battle_reward = 56, 
                        clan_a = wot_api_client.models.globalmap_provinces_data_inner_active_battles_inner_clan_a.globalmap_provinces_data_inner_active_battles_inner_clan_a(
                            clan_id = 56, 
                            win_elo_delta = 56, 
                            loose_elo_delta = 56, 
                            battle_reward = 56, ), 
                        clan_b = wot_api_client.models.globalmap_provinces_data_inner_active_battles_inner_clan_b.globalmap_provinces_data_inner_active_battles_inner_clan_b(
                            clan_id = 56, 
                            win_elo_delta = 56, 
                            loose_elo_delta = 56, 
                            battle_reward = 56, ), )
                    ],
                owner_clan_id = 56,
                is_borders_disabled = True,
                pillage_end_at = '',
                server = '',
        )
        """

    def testGlobalmapProvincesDataInner(self):
        """Test GlobalmapProvincesDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
