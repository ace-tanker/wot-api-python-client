# coding: utf-8

"""
    World of Tanks

    OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer's room](https://developers.wargaming.net/).

    The version of the OpenAPI document: 1.0.0
    Contact: contact@ace-tanker.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wot_api_client.models.tanks_stats_data_value_inner_ranked10x10 import TanksStatsDataValueInnerRanked10x10

class TestTanksStatsDataValueInnerRanked10x10(unittest.TestCase):
    """TanksStatsDataValueInnerRanked10x10 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TanksStatsDataValueInnerRanked10x10:
        """Test TanksStatsDataValueInnerRanked10x10
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TanksStatsDataValueInnerRanked10x10`
        """
        model = TanksStatsDataValueInnerRanked10x10()
        if include_optional:
            return TanksStatsDataValueInnerRanked10x10(
                battles = 56,
                wins = 56,
                xp = 56,
                losses = 56,
                survived_battles = 56,
                damage_received = 56,
                damage_dealt = 56,
                spotted = 56,
                shots = 56,
                hits = 56,
                frags = 56,
                capture_points = 56,
                dropped_capture_points = 56,
                hits_percents = 56,
                draws = 56,
                battle_avg_xp = 56,
                stun_number = 56,
                battles_on_stunning_vehicles = 56,
                stun_assisted_damage = 56,
                track_assisted_damage = 56,
                radio_assisted_damage = 56,
                max_frags = 56,
                max_xp = 56,
                max_damage = 56
            )
        else:
            return TanksStatsDataValueInnerRanked10x10(
                battles = 56,
                wins = 56,
                xp = 56,
                losses = 56,
                survived_battles = 56,
                damage_received = 56,
                damage_dealt = 56,
                spotted = 56,
                shots = 56,
                hits = 56,
                frags = 56,
                capture_points = 56,
                dropped_capture_points = 56,
                hits_percents = 56,
                draws = 56,
                battle_avg_xp = 56,
                stun_number = 56,
                battles_on_stunning_vehicles = 56,
                stun_assisted_damage = 56,
                track_assisted_damage = 56,
                radio_assisted_damage = 56,
                max_frags = 56,
                max_xp = 56,
                max_damage = 56,
        )
        """

    def testTanksStatsDataValueInnerRanked10x10(self):
        """Test TanksStatsDataValueInnerRanked10x10"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
