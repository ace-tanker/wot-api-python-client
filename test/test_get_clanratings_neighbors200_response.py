# coding: utf-8

"""
    World of Tanks

    OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer's room](https://developers.wargaming.net/).

    The version of the OpenAPI document: 1.0.0
    Contact: contact@ace-tanker.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wot_api_client.models.get_clanratings_neighbors200_response import GetClanratingsNeighbors200Response

class TestGetClanratingsNeighbors200Response(unittest.TestCase):
    """GetClanratingsNeighbors200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetClanratingsNeighbors200Response:
        """Test GetClanratingsNeighbors200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetClanratingsNeighbors200Response`
        """
        model = GetClanratingsNeighbors200Response()
        if include_optional:
            return GetClanratingsNeighbors200Response(
                status = 'error',
                meta = wot_api_client.models.clanratings_neighbors_meta.clanratings_neighbors_meta(
                    count = 56, ),
                data = [
                    wot_api_client.models.clanratings_clans_data_value.clanratings_clans_data_value(
                        clan_id = 56, 
                        clan_name = '', 
                        clan_tag = '', 
                        v10l_avg = wot_api_client.models.clanratings_clans_data_value_v10l_avg.clanratings_clans_data_value_v10l_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        battles_count_avg = wot_api_client.models.clanratings_clans_data_value_battles_count_avg.clanratings_clans_data_value_battles_count_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        battles_count_avg_daily = wot_api_client.models.clanratings_clans_data_value_battles_count_avg_daily.clanratings_clans_data_value_battles_count_avg_daily(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        global_rating_avg = wot_api_client.models.clanratings_clans_data_value_global_rating_avg.clanratings_clans_data_value_global_rating_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        global_rating_weighted_avg = wot_api_client.models.clanratings_clans_data_value_global_rating_weighted_avg.clanratings_clans_data_value_global_rating_weighted_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        efficiency = wot_api_client.models.clanratings_clans_data_value_efficiency.clanratings_clans_data_value_efficiency(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        wins_ratio_avg = wot_api_client.models.clanratings_clans_data_value_wins_ratio_avg.clanratings_clans_data_value_wins_ratio_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        rating_fort = wot_api_client.models.clanratings_clans_data_value_rating_fort.clanratings_clans_data_value_rating_fort(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        fb_elo_rating = wot_api_client.models.clanratings_clans_data_value_fb_elo_rating.clanratings_clans_data_value_fb_elo_rating(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        fb_elo_rating_10 = wot_api_client.models.clanratings_clans_data_value_fb_elo_rating_10.clanratings_clans_data_value_fb_elo_rating_10(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        fb_elo_rating_8 = wot_api_client.models.clanratings_clans_data_value_fb_elo_rating_8.clanratings_clans_data_value_fb_elo_rating_8(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        fb_elo_rating_6 = wot_api_client.models.clanratings_clans_data_value_fb_elo_rating_6.clanratings_clans_data_value_fb_elo_rating_6(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        gm_elo_rating = wot_api_client.models.clanratings_clans_data_value_gm_elo_rating.clanratings_clans_data_value_gm_elo_rating(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        gm_elo_rating_10 = wot_api_client.models.clanratings_clans_data_value_gm_elo_rating_10.clanratings_clans_data_value_gm_elo_rating_10(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        gm_elo_rating_8 = wot_api_client.models.clanratings_clans_data_value_gm_elo_rating_8.clanratings_clans_data_value_gm_elo_rating_8(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        gm_elo_rating_6 = wot_api_client.models.clanratings_clans_data_value_gm_elo_rating_6.clanratings_clans_data_value_gm_elo_rating_6(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        exclude_reasons = {
                            'key' : ''
                            }, )
                    ],
                error = wot_api_client.models.clanratings_clans_error_error.clanratings_clans_error_error(
                    code = 404, 
                    message = 'RATINGS_NOT_FOUND', 
                    field = '', 
                    value = '', )
            )
        else:
            return GetClanratingsNeighbors200Response(
                status = 'error',
                meta = wot_api_client.models.clanratings_neighbors_meta.clanratings_neighbors_meta(
                    count = 56, ),
                data = [
                    wot_api_client.models.clanratings_clans_data_value.clanratings_clans_data_value(
                        clan_id = 56, 
                        clan_name = '', 
                        clan_tag = '', 
                        v10l_avg = wot_api_client.models.clanratings_clans_data_value_v10l_avg.clanratings_clans_data_value_v10l_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        battles_count_avg = wot_api_client.models.clanratings_clans_data_value_battles_count_avg.clanratings_clans_data_value_battles_count_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        battles_count_avg_daily = wot_api_client.models.clanratings_clans_data_value_battles_count_avg_daily.clanratings_clans_data_value_battles_count_avg_daily(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        global_rating_avg = wot_api_client.models.clanratings_clans_data_value_global_rating_avg.clanratings_clans_data_value_global_rating_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        global_rating_weighted_avg = wot_api_client.models.clanratings_clans_data_value_global_rating_weighted_avg.clanratings_clans_data_value_global_rating_weighted_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        efficiency = wot_api_client.models.clanratings_clans_data_value_efficiency.clanratings_clans_data_value_efficiency(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        wins_ratio_avg = wot_api_client.models.clanratings_clans_data_value_wins_ratio_avg.clanratings_clans_data_value_wins_ratio_avg(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        rating_fort = wot_api_client.models.clanratings_clans_data_value_rating_fort.clanratings_clans_data_value_rating_fort(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        fb_elo_rating = wot_api_client.models.clanratings_clans_data_value_fb_elo_rating.clanratings_clans_data_value_fb_elo_rating(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        fb_elo_rating_10 = wot_api_client.models.clanratings_clans_data_value_fb_elo_rating_10.clanratings_clans_data_value_fb_elo_rating_10(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        fb_elo_rating_8 = wot_api_client.models.clanratings_clans_data_value_fb_elo_rating_8.clanratings_clans_data_value_fb_elo_rating_8(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        fb_elo_rating_6 = wot_api_client.models.clanratings_clans_data_value_fb_elo_rating_6.clanratings_clans_data_value_fb_elo_rating_6(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        gm_elo_rating = wot_api_client.models.clanratings_clans_data_value_gm_elo_rating.clanratings_clans_data_value_gm_elo_rating(
                            value = 1.337, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        gm_elo_rating_10 = wot_api_client.models.clanratings_clans_data_value_gm_elo_rating_10.clanratings_clans_data_value_gm_elo_rating_10(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        gm_elo_rating_8 = wot_api_client.models.clanratings_clans_data_value_gm_elo_rating_8.clanratings_clans_data_value_gm_elo_rating_8(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        gm_elo_rating_6 = wot_api_client.models.clanratings_clans_data_value_gm_elo_rating_6.clanratings_clans_data_value_gm_elo_rating_6(
                            value = 56, 
                            rank = 56, 
                            rank_delta = 56, ), 
                        exclude_reasons = {
                            'key' : ''
                            }, )
                    ],
                error = wot_api_client.models.clanratings_clans_error_error.clanratings_clans_error_error(
                    code = 404, 
                    message = 'RATINGS_NOT_FOUND', 
                    field = '', 
                    value = '', ),
        )
        """

    def testGetClanratingsNeighbors200Response(self):
        """Test GetClanratingsNeighbors200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
