# coding: utf-8

"""
    World of Tanks

    OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer's room](https://developers.wargaming.net/).

    The version of the OpenAPI document: 1.0.0
    Contact: contact@ace-tanker.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wot_api_client.models.get_globalmap_seasonrating200_response_one_of import GetGlobalmapSeasonrating200ResponseOneOf

class TestGetGlobalmapSeasonrating200ResponseOneOf(unittest.TestCase):
    """GetGlobalmapSeasonrating200ResponseOneOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetGlobalmapSeasonrating200ResponseOneOf:
        """Test GetGlobalmapSeasonrating200ResponseOneOf
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetGlobalmapSeasonrating200ResponseOneOf`
        """
        model = GetGlobalmapSeasonrating200ResponseOneOf()
        if include_optional:
            return GetGlobalmapSeasonrating200ResponseOneOf(
                status = 'ok',
                meta = wot_api_client.models.get_globalmap_seasons_200_response_one_of_meta.get_globalmap_seasons_200_response_oneOf_meta(
                    count = 56, 
                    page_total = 56, 
                    page = 56, ),
                data = [
                    wot_api_client.models.get_globalmap_seasonrating_200_response_one_of_data_inner.get_globalmap_seasonrating_200_response_oneOf_data_inner(
                        clan_id = 56, 
                        name = '', 
                        tag = '', 
                        color = '', 
                        award_level = '', 
                        rank = 56, 
                        rank_delta = 56, 
                        updated_at = 56, 
                        victory_points = 56, 
                        victory_points_to_next_award = 56, )
                    ]
            )
        else:
            return GetGlobalmapSeasonrating200ResponseOneOf(
                status = 'ok',
                meta = wot_api_client.models.get_globalmap_seasons_200_response_one_of_meta.get_globalmap_seasons_200_response_oneOf_meta(
                    count = 56, 
                    page_total = 56, 
                    page = 56, ),
                data = [
                    wot_api_client.models.get_globalmap_seasonrating_200_response_one_of_data_inner.get_globalmap_seasonrating_200_response_oneOf_data_inner(
                        clan_id = 56, 
                        name = '', 
                        tag = '', 
                        color = '', 
                        award_level = '', 
                        rank = 56, 
                        rank_delta = 56, 
                        updated_at = 56, 
                        victory_points = 56, 
                        victory_points_to_next_award = 56, )
                    ],
        )
        """

    def testGetGlobalmapSeasonrating200ResponseOneOf(self):
        """Test GetGlobalmapSeasonrating200ResponseOneOf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
